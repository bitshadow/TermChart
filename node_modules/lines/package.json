{
  "name": "lines",
  "version": "1.0.1",
  "description": "tiny utility for line per line processing with streams",
  "keywords": [
    "stream",
    "lines"
  ],
  "url": "http://github.com/Floby/node-lines",
  "author": {
    "name": "Florent Jaby",
    "email": "florent.jaby@gmail.com",
    "url": "http://github.com/Floby"
  },
  "main": "./lines",
  "repository": {
    "type": "git",
    "url": "http://github.com/Floby/node-lines.git"
  },
  "engines": {
    "node": ">= 0.2.2"
  },
  "readme": "this is a tiny utility function to help processing readable streams line per line with [NodeJS](http://github.com/ry/node)\n\nhere is a simple example which explains almost everything\n\n\tvar lines = require('lines');\n\tvar net = require('net');\n\t\n\tnet.createServer(function(socket) {\n\t    socket.setEncoding('utf8');\n\t    lines(socket); // here is where the magic happens\n\t    socket.on('line', function(line) {\n\t\t// line is one line with no trailing \\n or \\r\n\t    });\n\t}).listen('/tmp/mysock');\n\nlines doesn't work on non-encoded streams. note that you still can listen\nto 'data' events on the same stream with no loss of data.\n\ninstall it via npm\n\tnpm install lines\n\nor get the code from [the repository](http://github.com/Floby/node-lines) and link lines.js from your ~/.node_libraries/\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/Floby/node-lines/issues"
  },
  "_id": "lines@1.0.1",
  "dist": {
    "shasum": "6884d5edf9dbeff5d7c081150c96751e45827fec"
  },
  "_from": "lines@",
  "_resolved": "https://registry.npmjs.org/lines/-/lines-1.0.1.tgz"
}
